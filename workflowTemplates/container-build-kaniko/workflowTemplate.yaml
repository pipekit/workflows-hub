apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: container-build-kaniko
  labels:
    workflows.argoproj.io/template: "true"
  annotations:
    workflows.argoproj.io/description: >-
      Uses Kaniko to build a container image within Kubernetes and optionally push to a defined registry.
    workflows.argoproj.io/maintainer: 'Pipekit Inc'
    workflows.argoproj.io/maintainer_url: 'https://pipekit.io'
    workflows.argoproj.io/version: '>= 3.4.6'
spec:
  entrypoint: main
  templates:
  - name: main
    inputs:
      parameters:
        - name: dir
          value: 
          default: "workdir"
        - name: path
          value:
          default: "path/to/dockerfile/directory"
        - name: boolExportImage
          default: true
          value:
        - name: dockerfile
          default: "Dockerfile"
          value:
        - name: containerImage
          default: "pipekit/exampleimagename"
          value:
        - name: containerTag
          default: "v0.0.0"
          value:
        - name: numPushRetries
          default: 3
          value:
        - name: boolUseCache
          default: true
          value:
        - name: boolUseNewRun
          default: true
          value:
        - name: boolMakeReproducible
          default: true
          value:
        - name: dockerSecret
          default: "docker-config"
          value:
        - name: additionalFlags
          default: ""
          value:
    container:
      image: gcr.io/kaniko-project/executor:debug
      imagePullPolicy: Always
      command:
        - sh
        - -c
        - |
          if [ "{{inputs.parameters.boolExportImage}}" = "true" ]; then
            echo "Exporting Image"
            export destination="--destination={{inputs.parameters.containerImage}}:{{inputs.parameters.containerTag}} --push-retry={{inputs.parameters.numPushRetries}}"
            if [ "{{inputs.parameters.boolUseCache}}" ]; then
              echo "Enabling Cache"
              export cache="--cache=true"
            else
              echo "Disabling Cache"
              export cache="--cache=false"
            fi
          else
            echo "Not Exporting Image"
            export destination="--no-push"
            export cache="--cache=false"
          fi
          if [ "{{inputs.parameters.boolUseNewRun}}" == "true" ]; then
            echo "Using New Run"
            export useNewRun="--use-new-run=true"
          fi
          if [ "{{inputs.parameters.boolMakeReproducible}}" == "true" ]; then
            echo "Make build reproducible"
            export reproducible="--reproducible=true"
          fi

          /kaniko/executor \
          --dockerfile=/{{inputs.parameters.dir}}/{{inputs.parameters.path}}/{{inputs.parameters.dockerfile}} \
          --context="dir:///{{inputs.parameters.dir}}/{{inputs.parameters.path}}" \
          ${destination} \
          {{inputs.parameters.additionalFlags}} \
          ${cache} \
          ${useNewRun} \
          ${reproducible}
      volumeMounts:
        - name: "{{inputs.parameters.dockerSecret}}"
          mountPath: /kaniko/.docker/
        - name: "{{inputs.parameters.dir}}"
          mountPath: /{{inputs.parameters.dir}}
      resources:
        requests:
          memory: 1Gi
          cpu: 1
